{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\learn\\\\weather-app\\\\src\\\\App.js\";\nimport Days from \"./components/Days\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  latitude: 40.1875,\n  longitude: 44.5,\n  generationtime_ms: 0.6879568099975586,\n  utc_offset_seconds: 14400,\n  timezone: \"Asia/Yerevan\",\n  timezone_abbreviation: \"+04\",\n  elevation: 989.0,\n  daily_units: {\n    time: \"iso8601\",\n    weathercode: \"wmo code\",\n    temperature_2m_min: \"°C\"\n  },\n  daily: {\n    time: [\"2022-12-28\", \"2022-12-29\", \"2022-12-30\", \"2022-12-31\", \"2023-01-01\", \"2023-01-02\", \"2023-01-03\"],\n    weathercode: [3, 3, 1, 0, 1, 1, 0],\n    temperature_2m_min: [-3.1, -2.4, -3.0, -3.8, -4.0, -4.6, -3.5]\n  }\n};\nfunction App() {\n  const obj = {\n    id: 1,\n    lol: 2,\n    opa: {\n      xiar: 3\n    }\n  };\n  const daysOfWeek = [\"Sunday\", \"Monday\", \"Thursday\", \"Wednsday\", \"Tuesday\", \"Friday\", \"Saturday\"];\n  // const [data, setData] = useState();\n  // const url =\n  //   \"https://api.open-meteo.com/v1/forecast?latitude=40.18&longitude=44.51&daily=weathercode,temperature_2m_min&timezone=auto\";\n  // useEffect(() => {\n  //   axios.get(url).then(response => setData(response.data));\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"background\",\n      children: \"5-Day forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"location\",\n      children: \"Berlin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainBox\",\n      children: [daysOfWeek.map((day, key) => {\n        return /*#__PURE__*/_jsxDEV(Days, {\n          date: data.daily.time[key],\n          dayName: day,\n          temp: data.daily.temperature_2m_min[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Days","axios","React","useState","useEffect","data","latitude","longitude","generationtime_ms","utc_offset_seconds","timezone","timezone_abbreviation","elevation","daily_units","time","weathercode","temperature_2m_min","daily","App","obj","id","lol","opa","xiar","daysOfWeek","map","day","key"],"sources":["C:/Users/Admin/Desktop/learn/weather-app/src/App.js"],"sourcesContent":["import Days from \"./components/Days\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst data = {\r\n  latitude: 40.1875,\r\n  longitude: 44.5,\r\n  generationtime_ms: 0.6879568099975586,\r\n  utc_offset_seconds: 14400,\r\n  timezone: \"Asia/Yerevan\",\r\n  timezone_abbreviation: \"+04\",\r\n  elevation: 989.0,\r\n  daily_units: {\r\n    time: \"iso8601\",\r\n    weathercode: \"wmo code\",\r\n    temperature_2m_min: \"°C\",\r\n  },\r\n  daily: {\r\n    time: [\r\n      \"2022-12-28\",\r\n      \"2022-12-29\",\r\n      \"2022-12-30\",\r\n      \"2022-12-31\",\r\n      \"2023-01-01\",\r\n      \"2023-01-02\",\r\n      \"2023-01-03\",\r\n    ],\r\n    weathercode: [3, 3, 1, 0, 1, 1, 0],\r\n    temperature_2m_min: [-3.1, -2.4, -3.0, -3.8, -4.0, -4.6, -3.5],\r\n  },\r\n};\r\n\r\nfunction App() {\r\n  const obj = {\r\n    id: 1,\r\n    lol: 2,\r\n    opa: {\r\n      xiar: 3,\r\n    },\r\n  };\r\n  const daysOfWeek = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Thursday\",\r\n    \"Wednsday\",\r\n    \"Tuesday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  // const [data, setData] = useState();\r\n  // const url =\r\n  //   \"https://api.open-meteo.com/v1/forecast?latitude=40.18&longitude=44.51&daily=weathercode,temperature_2m_min&timezone=auto\";\r\n  // useEffect(() => {\r\n  //   axios.get(url).then(response => setData(response.data));\r\n  // }, []);\r\n  return (\r\n    <div>\r\n      <h1 className=\"background\">5-Day forecast</h1>\r\n      <p className=\"location\">Berlin</p>\r\n      <div className=\"mainBox\">\r\n        {daysOfWeek.map((day, key) => {\r\n          return (\r\n            <Days\r\n              key={key}\r\n              date={data.daily.time[key]}\r\n              dayName={day}\r\n              temp={data.daily.temperature_2m_min[key]}\r\n            />\r\n          );\r\n        })}\r\n        <p>{}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,IAAI,GAAG;EACXC,QAAQ,EAAE,OAAO;EACjBC,SAAS,EAAE,IAAI;EACfC,iBAAiB,EAAE,kBAAkB;EACrCC,kBAAkB,EAAE,KAAK;EACzBC,QAAQ,EAAE,cAAc;EACxBC,qBAAqB,EAAE,KAAK;EAC5BC,SAAS,EAAE,KAAK;EAChBC,WAAW,EAAE;IACXC,IAAI,EAAE,SAAS;IACfC,WAAW,EAAE,UAAU;IACvBC,kBAAkB,EAAE;EACtB,CAAC;EACDC,KAAK,EAAE;IACLH,IAAI,EAAE,CACJ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,YAAY,CACb;IACDC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClCC,kBAAkB,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG;EAC/D;AACF,CAAC;AAED,SAASE,GAAG,GAAG;EACb,MAAMC,GAAG,GAAG;IACVC,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE;MACHC,IAAI,EAAE;IACR;EACF,CAAC;EACD,MAAMC,UAAU,GAAG,CACjB,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,UAAU,EACV,SAAS,EACT,QAAQ,EACR,UAAU,CACX;EACD;EACA;EACA;EACA;EACA;EACA;EACA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,YAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eAC9C;MAAG,SAAS,EAAC,UAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW,eAClC;MAAK,SAAS,EAAC,SAAS;MAAA,WACrBA,UAAU,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;QAC5B,oBACE,QAAC,IAAI;UAEH,IAAI,EAAEtB,IAAI,CAACY,KAAK,CAACH,IAAI,CAACa,GAAG,CAAE;UAC3B,OAAO,EAAED,GAAI;UACb,IAAI,EAAErB,IAAI,CAACY,KAAK,CAACD,kBAAkB,CAACW,GAAG;QAAE,GAHpCA,GAAG;UAAA;UAAA;UAAA;QAAA,QAIR;MAEN,CAAC,CAAC,eACF;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KA1CQT,GAAG;AA4CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}